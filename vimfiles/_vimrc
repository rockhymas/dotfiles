filetype off
call pathogen#runtime_append_all_bundles()

set nocompatible        " This must be first, because it changes other options as a side effect.

" Random Behavior
if has("vms")
  set nobackup          " do not keep a backup file, use versions instead
else
  set backup            " keep a backup file
endif
set history=50          " keep 50 lines of command line history
set ruler               " show the cursor position all the time
set showcmd             " display incomplete commands
set showmode            " display non-command modes in command line
set incsearch           " move the cursor as you type the search
set ignorecase          " by default, when searching
set backspace=indent,eol,start " allow backspacing over everything in insert mode
set modelines=0         " no need for modelines, risky anyway
set scrolloff=3         " Scroll three lines before hitting the edge of the screen
set wildmenu            " show tab completion for commands above command line
set hidden              " keep buffers around if replaced via :e
set wildmode=list:full  " complete first match, and show list of matches

" Tab stuff
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab

" Display of characters
set list
set listchars=tab:>-,trail:-

let &guioptions = substitute(&guioptions, "t", "", "g") " No tearoff menus
let &guioptions = substitute(&guioptions, "T", "", "g") " No toolbar
let &guioptions = substitute(&guioptions, "m", "", "g") " No menubar
set guioptions+="grL"                                   " Scrollbars, gray menu items

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else
  set autoindent		" always set autoindenting on
endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

source $VIMRUNTIME/mswin.vim

:set nu
:nn <C-Tab> <C-PageDown>
:nn <C-S-Tab> <C-PageUp>
:nn <C-PageDown> <C-W>w
:nn <C-PageUp> <C-W>W
:vn <C-Tab> <C-PageDown>
:vn <C-S-Tab> <C-PageUp>
:vn <C-PageDown> <C-W>w
:vn <C-PageUp> <C-W>W
:ino <C-Tab> <C-PageDown>
:ino <C-S-Tab> <C-PageUp>
:ino <C-PageDown> <C-W>w
:ino <C-PageUp> <C-W>W

:cab e tabe
